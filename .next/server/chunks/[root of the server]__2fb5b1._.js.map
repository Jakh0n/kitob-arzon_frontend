{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file:///Users/jahkon/Desktop/Redopia/client/http/axios.ts"],"sourcesContent":["import axios from 'axios'\n\nexport const SERVER_URL =\n\tprocess.env.NEXT_PUBLIC_SERVER_URL || 'http://localhost:3000'\n\nexport const axiosClient = axios.create({\n\tbaseURL: SERVER_URL,\n\twithCredentials: true,\n})\n"],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,aACZ,6DAAsC;AAEhC,MAAM,cAAc,uIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvC,SAAS;IACT,iBAAiB;AAClB"}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":["file:///Users/jahkon/Desktop/Redopia/client/lib/auth-options.ts"],"sourcesContent":["import { axiosClient } from '@/http/axios'\nimport { ReturnActionType } from '@/types'\nimport { NextAuthOptions } from 'next-auth'\nimport Credentials from 'next-auth/providers/credentials'\n\nexport const authOptions: NextAuthOptions = {\n\tproviders: [\n\t\tCredentials({\n\t\t\tname: 'Credentials',\n\t\t\tcredentials: { userId: { label: 'User ID', type: 'text' } },\n\t\t\tasync authorize(credentials) {\n\t\t\t\tconst { data } = await axiosClient.get<ReturnActionType>(\n\t\t\t\t\t`/api/user/profile/${credentials?.userId}`\n\t\t\t\t)\n\t\t\t\treturn JSON.parse(\n\t\t\t\t\tJSON.stringify({ email: data.user.email, name: data.user._id })\n\t\t\t\t)\n\t\t\t},\n\t\t}),\n\t],\n\tcallbacks: {\n\t\tasync session({ session }) {\n\t\t\tconst { data } = await axiosClient.get<ReturnActionType>(\n\t\t\t\t`/api/user/profile/${session.user?.name}`\n\t\t\t)\n\t\t\tsession.currentUser = data.user\n\t\t\treturn session\n\t\t},\n\t},\n\tsession: { strategy: 'jwt' },\n\tjwt: { secret: process.env.NEXT_PUBLIC_JWT_SECRET },\n\tsecret: process.env.NEXT_AUTH_SECRET,\n}\n"],"names":[],"mappings":";;;AAAA;AAGA;;;AAEO,MAAM,cAA+B;IAC3C,WAAW;QACV,CAAA,GAAA,0JAAA,CAAA,UAAW,AAAD,EAAE;YACX,MAAM;YACN,aAAa;gBAAE,QAAQ;oBAAE,OAAO;oBAAW,MAAM;gBAAO;YAAE;YAC1D,MAAM,WAAU,WAAW;gBAC1B,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,+GAAA,CAAA,cAAW,CAAC,GAAG,CACrC,CAAC,kBAAkB,EAAE,aAAa,QAAQ;gBAE3C,OAAO,KAAK,KAAK,CAChB,KAAK,SAAS,CAAC;oBAAE,OAAO,KAAK,IAAI,CAAC,KAAK;oBAAE,MAAM,KAAK,IAAI,CAAC,GAAG;gBAAC;YAE/D;QACD;KACA;IACD,WAAW;QACV,MAAM,SAAQ,EAAE,OAAO,EAAE;YACxB,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,+GAAA,CAAA,cAAW,CAAC,GAAG,CACrC,CAAC,kBAAkB,EAAE,QAAQ,IAAI,EAAE,MAAM;YAE1C,QAAQ,WAAW,GAAG,KAAK,IAAI;YAC/B,OAAO;QACR;IACD;IACA,SAAS;QAAE,UAAU;IAAM;IAC3B,KAAK;QAAE,MAAM;IAAqC;IAClD,QAAQ,QAAQ,GAAG,CAAC,gBAAgB;AACrC"}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":["file:///Users/jahkon/Desktop/Redopia/client/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["import { authOptions } from '@/lib/auth-options'\nimport NextAuth from 'next-auth'\n\nconst handler = NextAuth(authOptions)\nexport { handler as GET, handler as POST }\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA,MAAM,UAAU,CAAA,GAAA,uIAAA,CAAA,UAAQ,AAAD,EAAE,wHAAA,CAAA,cAAW"}},
    {"offset": {"line": 249, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}